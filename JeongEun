#include "stdafx.h" 
#include <stdlib.h>  
#include <glut.h> 
#include <iostream> 
#include <math.h>  
#include <time.h>  
#include <string.h>  
#define pi 3.14 
//모양: 세모, 네모, 원 
int board[3][3];   // board for gameplay   
int turn;         // current move  
int result;         // Result of the game   
bool over;         // Is the game Over?   
bool finish1; //이 변수는 player1말 선택이 끝났는가를 알리는 변수  
bool finish2; //이 변수는 player2의 말 선택이 끝났는가를 알리는 변수  
int kind1; //player1의 말(세모, 네모, 원)을 나타내는 변수 세모=1, 네모=2, 원=3  
int kind2; //player2의 말 (세모, 네모, 원)을 나타내는 변수 세모=1, 네모=2, 원=3 
const GLfloat size = 2.0; 
void DrawString(void *font,const char s[],float x,float y) // string 함수 
{    
unsigned int i;      
glRasterPos2f(x,y);      
for(i=0;i<strlen(s);i++)    
{       
glutBitmapCharacter(font,s[i]);   
} 
} 
void Triangle(int x,int y,int r) // 삼각형 만드는 함수 x좌표, y좌표, 크기를 나타낼 r 
{    glBegin(GL_POLYGON);   
glColor3f(0.8, 0.5, 0.0);    
glVertex2f(x, y+r+size);    
glVertex2f(x + r*cos(330* pi / 180)-size, y + r*sin(330* pi / 180)-size);    
glVertex2f(x + r*cos(210* pi / 180)+size, y + r*sin(210* pi / 180)-size);  
glEnd(); } 
void Rectangular(int x,int y, int r) // 사각형 만드는 함수 
{     
glBegin(GL_POLYGON);   
glColor3f(0.8, 0.5, 0.0);   
glVertex2f(x + r, y + r);    
glVertex2f(x - r, y + r);    
glVertex2f(x - r, y - r);   
glVertex2f(x + r, y - r);   
glEnd(); } 

void Circle(float cx, float cy, float r, int num_segments)  //원 만드는 함수 
{     glBegin(GL_LINE_LOOP);    
for (int i = 0; i < num_segments; i++)        
{          float theta = 2.0f * 3.1415926f * float(i) / float(num_segments);//get the current angle  현재의 angle 얻기       
float x = r * cosf(theta);//calculate the x component  얻은 angle토대로 x좌표 구하기      
float y = r * sinf(theta);//calculate the y component  얻은 angle토대로 y좌표 구하기      
glVertex2f(x + cx, y + cy);//output vertex    
}   
glEnd(); 
}  
void SetKinkByMouse(int button, int state, int x, int y)//마우스함수 이용해서 구간 나눠서 x좌표가 0~100이면 세모, 101~200이면 네모, 201~300이면 원으로
{ 
if( button==GLUT_LEFT_BUTTON && state == GLUT_DOWN)   
{     
if(x>0 && x<101 && y < 150) //세모 선택했을 경우      
kind1=1;    
else if(x>100 && x<201 && y<150)//네모 선택했을 경우 
kind2=2;      
else if(x>200 && x<300 && y<150)//원 선택했을 경우  
kind2=3;      
finish1=true;  
}        
if(finish1==true &&finish2==false && button==GLUT_LEFT_BUTTON && state == GLUT_DOWN) 
{   
if((x>0 && x<101 && y<150)&& kind1!=1) //세모 선택했을 경우     
kind2=1;//kind는 1로 세팅      
else if((x>100 && x<201 && y<150) && kind1!=2)//네모 선택했을 경우      
kind2=2;//kind는 2로 세팅       
else if((x>200 && x<300 && y<150) && kind1!=3)//원 선택했을 경우         
kind2=3;//kind는 3으로 세팅     
finish2=true;   
} } 
void Display() 
{
glClear(GL_COLOR_BUFFER_BIT);  
glClearColor(1,1,1,1);   
glColor3f(0,0,0);         
DrawString(GLUT_BITMAP_HELVETICA_18,"CHOOSE",100,30);     
Triangle(50,100,30);    
Rectangular(150,100,30);    
Circle(250,100,30,15);  
DrawString(GLUT_BITMAP_HELVETICA_18,"PLAYER1",45,180);    
DrawString(GLUT_BITMAP_HELVETICA_18,"PLAYER2",200,180);     
glFlush();  
switch(kind1)    
{  case 1:     
Triangle(50,230,30); 
break; 
case 2:
Rectangular(50,230,30); 
break;  
 case 3:   
 Circle(50,230,30,15);  
 break;  
    }     
 switch(kind2)     
 {  case 1:       
 Triangle(250,230,30);       
 break;  
 case 2: 
 Rectangular(250,230,30); 
 break;  
 case 3:    
 Circle(250,230,30,15);     
 break;  
    }    
    glutSwapBuffers();  
    }  
 
 void Reshape(int x, int y) 
 {     
 glViewport(0, 0, x, y);    
 glMatrixMode(GL_PROJECTION);      
 glLoadIdentity();      
 glOrtho(0, x, y, 0, 0, 1);      
 glMatrixMode(GL_MODELVIEW);
 }   
 int _tmain(int argc, _TCHAR* argv[]) 
 { 
 glutInitDisplayMode(GLUT_RGB|GLUT_DOUBLE);     
 indowSize(300,350); //윈도우 사이즈는 x=300, y=350    
 glutCreateWindow("Tic Tac Toe"); //윈도우 명    
 glutReshapeFunc(Reshape);     
 glutDisplayFunc(Display);     
 glutMouseFunc(SetKinkByMouse);       
 glutIdleFunc(Display);       
 glutMainLoop();     
 return 0;
 } 
